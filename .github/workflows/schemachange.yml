name: Applying Schema Changes with schemachange

on:
  push:
    branches:
      - main
      - user
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'

      - name: Install schemachange
        run: pip install schemachange

      - name: Parse Snowflake Secret
        id: parse_secret
        env:
          SNOWFLAKE_SECRET: ${{ secrets.SNOWFLAKE_SECRET }}
        run: |
          echo "Parsing Snowflake credentials..."
          echo "::set-output name=account::$(echo $SNOWFLAKE_SECRET | jq -r '.account')"
          echo "::set-output name=user::$(echo $SNOWFLAKE_SECRET | jq -r '.user')"
          echo "::set-output name=password::$(echo $SNOWFLAKE_SECRET | jq -r '.password')"
          echo "::set-output name=role::$(echo $SNOWFLAKE_SECRET | jq -r '.role')"
          echo "::set-output name=warehouse::$(echo $SNOWFLAKE_SECRET | jq -r '.warehouse')"
          echo "::set-output name=database::$(echo $SNOWFLAKE_SECRET | jq -r '.database')"
          echo "::set-output name=schema::$(echo $SNOWFLAKE_SECRET | jq -r '.schema')"

      - name: Run schemachange
        env:
          SNOWFLAKE_ACCOUNT: ${{ steps.parse_secret.outputs.account }}
          SNOWFLAKE_USER: ${{ steps.parse_secret.outputs.user }}
          SNOWFLAKE_PASSWORD: ${{ steps.parse_secret.outputs.password }}
          SNOWFLAKE_ROLE: ${{ steps.parse_secret.outputs.role }}
          SNOWFLAKE_WAREHOUSE: ${{ steps.parse_secret.outputs.warehouse }}
          SNOWFLAKE_DATABASE: ${{ steps.parse_secret.outputs.database }}
          SNOWFLAKE_SCHEMA: ${{ steps.parse_secret.outputs.schema }}
        run: |
          schemachange deploy \
            -f ./change-scripts \
            -a $SNOWFLAKE_ACCOUNT \
            -u $SNOWFLAKE_USER \
            -r $SNOWFLAKE_ROLE \
            -w $SNOWFLAKE_WAREHOUSE \
            -d $SNOWFLAKE_DATABASE \
            -s $SNOWFLAKE_SCHEMA \
            -c $SNOWFLAKE_DATABASE.SCHEMACHANGE.CHANGE_HISTORY \
            --create-change-history-table
